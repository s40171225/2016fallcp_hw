<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall CPA 課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2017-01-06T13:00:00+08:00</updated><entry><title>單線旋轉動畫</title><link href="./dan-xian-xuan-zhuan-dong-hua.html" rel="alternate"></link><published>2017-01-06T13:00:00+08:00</published><updated>2017-01-06T13:00:00+08:00</updated><author><name>s40171225</name></author><id>tag:,2017-01-06:./dan-xian-xuan-zhuan-dong-hua.html</id><summary type="html">&lt;p&gt;單線旋轉動畫:&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;canvas id="onebar" width="400" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import window
from browser import timer
import math
canvas = document["onebar"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

def line(x1, y1, x2, y2):
    # 以下可以利用 ctx 物件進行畫圖
    # 先畫一條直線
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()
line(200, 200, 200, 300)

circle(200, 200, 5)

x1=200
y1=200
r=100
deg = math.pi/180
theta=0
# 每隔特定時間, 進行動畫繪製
def animate():
    global theta
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製小球
    x2 = x1 + r*math.cos(theta*deg)
    y2 = y1 + r*math.sin(theta*deg)
    line(x1,y1,x2,y2)
    #再加一條小線段
    x3 = x2 + 50*math.cos(10*theta*deg)
    y3 = y2 + 50*math.sin(10*theta*deg)
    line(x2,y2,x3,y3)

    circle(x1,y1,5)
    theta +=1

timer.set_interval(animate, 50)
'''
for i in range(36):
    theta = i *10
    x2 = x1 + r*math.cos(theta*deg)
    y2 = y1 + r*math.sin(theta*deg)
    line(x1,y1,x2,y2)
'''

&lt;/script&gt;

&lt;p&gt;上述繪圖的程式碼如下:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;
&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;
&lt;canvas id="onebar" width="400" height="400"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import window
from browser import timer
import math
canvas = document["onebar"]
ctx = canvas.getContext("2d")

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

def line(x1, y1, x2, y2):
    # 以下可以利用 ctx 物件進行畫圖
    # 先畫一條直線
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()
line(200, 200, 200, 300)

circle(200, 200, 5)
x1=200
y1=200
r=100
deg = math.pi/180
theta=0
# 每隔特定時間, 進行動畫繪製
def animate():
    global theta
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製小球
    x2 = x1 + r*math.cos(theta*deg)
    y2 = y1 + r*math.sin(theta*deg)
    line(x1,y1,x2,y2)
    #再加一條小線段
    x3 = x2 + 50*math.cos(10*theta*deg)
    y3 = y2 + 50*math.sin(10*theta*deg)
    line(x2,y2,x3,y3)

'''
for i in range(36):
    theta = i *10
    x2 = x1 + r*math.cos(theta*deg)
    y2 = y1 + r*math.sin(theta*deg)
    line(x1,y1,x2,y2)
'''


&lt;/script&gt;

&lt;/script&gt;

&lt;/pre&gt;</summary><category term="w17"></category></entry></feed>